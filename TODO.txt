########################################################################
## The GRAS TODO list
########################################################################

* generate block task loops with fixed lengths
** need a lookup/jump table
** prove that compiler does unrolling
* handle forecast
** not 100% sure here
* add hooks to specify input reserve
** automatically calculate from output multiple and rel rate
* gr stream mux is on drugs
* handle calculating noutputitems using ninputs as a constraint
* allocation
** hooks for advanced allocation
** override the default allocator (output token, recommended bytes)
** set allocator affinity hook
* python wrapper for block will come from grextras
* bring in numanuma
** thread prio
** thread affinity
** memory affinity
* track memcpys for block usage stats
* runtime history, input/output multiple change?
** resend the hint to the allocator and possibly re-allocate
* determine when outputs should be flushed, or continual filling
* hooks for setting the "active framework"
** set this before creating blocks to give them an affinity
